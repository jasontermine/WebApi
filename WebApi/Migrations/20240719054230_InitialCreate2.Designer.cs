// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240719054230_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Assignment", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("uuid");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            uuid = new Guid("da2dc0cf-c3b2-49cc-a6ad-90ebf084c20f"),
                            Name = "Murtenstrasse 5",
                            dueDate = new DateTime(2024, 6, 30, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            uuid = new Guid("049ac3bf-51c2-4143-b466-faa835a66817"),
                            Name = "Schanzenweg 8",
                            dueDate = new DateTime(2024, 12, 31, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            uuid = new Guid("fec3e824-27f2-4b86-98f2-de1ee44b6608"),
                            Name = "Könizstrasse 12",
                            dueDate = new DateTime(2024, 8, 31, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            uuid = new Guid("816474b0-ea46-4e44-a485-918f820f0df0"),
                            Name = "Rheinstrasse 3",
                            dueDate = new DateTime(2025, 2, 28, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("WebApi.Models.Employee", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("uuid");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            uuid = new Guid("8031b974-8e11-43e4-8587-c419946c648f"),
                            Age = 30,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            uuid = new Guid("7476f099-3f5c-4de2-90e2-e0fc1a94f4fe"),
                            Age = 25,
                            FirstName = "Anna",
                            LastName = "Karelia"
                        },
                        new
                        {
                            uuid = new Guid("0fb4af0b-710b-43ca-94d3-41968ebd7136"),
                            Age = 40,
                            FirstName = "Michael",
                            LastName = "Smith"
                        },
                        new
                        {
                            uuid = new Guid("7c3c762e-f351-482d-b0c8-87027fa7c163"),
                            Age = 35,
                            FirstName = "Emily",
                            LastName = "Jones"
                        });
                });

            modelBuilder.Entity("WebApi.Models.EmployeeAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AssignmentUuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeUuid")
                        .HasColumnType("uuid");

                    b.Property<float>("HoursWorked")
                        .HasColumnType("real");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentUuid");

                    b.HasIndex("EmployeeUuid");

                    b.ToTable("EmployeeAssignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentUuid = new Guid("da2dc0cf-c3b2-49cc-a6ad-90ebf084c20f"),
                            EmployeeUuid = new Guid("8031b974-8e11-43e4-8587-c419946c648f"),
                            HoursWorked = 40f,
                            RecordedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            AssignmentUuid = new Guid("049ac3bf-51c2-4143-b466-faa835a66817"),
                            EmployeeUuid = new Guid("7476f099-3f5c-4de2-90e2-e0fc1a94f4fe"),
                            HoursWorked = 20f,
                            RecordedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            AssignmentUuid = new Guid("fec3e824-27f2-4b86-98f2-de1ee44b6608"),
                            EmployeeUuid = new Guid("0fb4af0b-710b-43ca-94d3-41968ebd7136"),
                            HoursWorked = 30f,
                            RecordedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            AssignmentUuid = new Guid("816474b0-ea46-4e44-a485-918f820f0df0"),
                            EmployeeUuid = new Guid("7c3c762e-f351-482d-b0c8-87027fa7c163"),
                            HoursWorked = 25f,
                            RecordedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            AssignmentUuid = new Guid("fec3e824-27f2-4b86-98f2-de1ee44b6608"),
                            EmployeeUuid = new Guid("8031b974-8e11-43e4-8587-c419946c648f"),
                            HoursWorked = 15f,
                            RecordedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            AssignmentUuid = new Guid("da2dc0cf-c3b2-49cc-a6ad-90ebf084c20f"),
                            EmployeeUuid = new Guid("0fb4af0b-710b-43ca-94d3-41968ebd7136"),
                            HoursWorked = 35f,
                            RecordedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApi.Models.EmployeeAssignment", b =>
                {
                    b.HasOne("WebApi.Models.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
